//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Anchitech.Baking.MesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MesService.EquipServiceSoap")]
    public interface EquipServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestConnection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TestConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestConnection", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TestConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadMultiMachStateListInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Anchitech.Baking.MesService.VMResult UploadMultiMachStateListInfo(string Info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadMultiMachStateListInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<Anchitech.Baking.MesService.VMResult> UploadMultiMachStateListInfoAsync(string Info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadBakingData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Anchitech.Baking.MesService.VMResult UploadBakingData(string Info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadBakingData", ReplyAction="*")]
        System.Threading.Tasks.Task<Anchitech.Baking.MesService.VMResult> UploadBakingDataAsync(string Info);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class VMResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int resultCodeField;
        
        private string resultMsgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResultMsg {
            get {
                return this.resultMsgField;
            }
            set {
                this.resultMsgField = value;
                this.RaisePropertyChanged("ResultMsg");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EquipServiceSoapChannel : Anchitech.Baking.MesService.EquipServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EquipServiceSoapClient : System.ServiceModel.ClientBase<Anchitech.Baking.MesService.EquipServiceSoap>, Anchitech.Baking.MesService.EquipServiceSoap {
        
        public EquipServiceSoapClient() {
        }
        
        public EquipServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EquipServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EquipServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EquipServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string TestConnection() {
            return base.Channel.TestConnection();
        }
        
        public System.Threading.Tasks.Task<string> TestConnectionAsync() {
            return base.Channel.TestConnectionAsync();
        }
        
        public Anchitech.Baking.MesService.VMResult UploadMultiMachStateListInfo(string Info) {
            return base.Channel.UploadMultiMachStateListInfo(Info);
        }
        
        public System.Threading.Tasks.Task<Anchitech.Baking.MesService.VMResult> UploadMultiMachStateListInfoAsync(string Info) {
            return base.Channel.UploadMultiMachStateListInfoAsync(Info);
        }
        
        public Anchitech.Baking.MesService.VMResult UploadBakingData(string Info) {
            return base.Channel.UploadBakingData(Info);
        }
        
        public System.Threading.Tasks.Task<Anchitech.Baking.MesService.VMResult> UploadBakingDataAsync(string Info) {
            return base.Channel.UploadBakingDataAsync(Info);
        }
    }
}
