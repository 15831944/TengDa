//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Tafel.MES.TafelWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IServiceAPI", Namespace="http://tempuri.org/")]
    public partial class ServiceAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DoWorkOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunServerAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunServerAPI2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSFCOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkOrderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBomInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSFCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeptInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback InserOCVOperationCompleted;
        
        private System.Threading.SendOrPostCallback InserPinDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InserTightenOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_UserOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_MaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_SFCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_MachineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ProcessInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_StationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrayInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStepDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTrayInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceAPI() {
            this.Url = global::Tafel.MES.Properties.Settings.Default.Tafel_MES_TafelWebService_ServiceAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DoWorkCompletedEventHandler DoWorkCompleted;
        
        /// <remarks/>
        public event RunServerAPICompletedEventHandler RunServerAPICompleted;
        
        /// <remarks/>
        public event RunServerAPI2CompletedEventHandler RunServerAPI2Completed;
        
        /// <remarks/>
        public event CheckSFCCompletedEventHandler CheckSFCCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event GetWorkOrderInfoCompletedEventHandler GetWorkOrderInfoCompleted;
        
        /// <remarks/>
        public event GetEmployeeInfoCompletedEventHandler GetEmployeeInfoCompleted;
        
        /// <remarks/>
        public event GetProductInfoCompletedEventHandler GetProductInfoCompleted;
        
        /// <remarks/>
        public event GetBomInfoCompletedEventHandler GetBomInfoCompleted;
        
        /// <remarks/>
        public event GetOrderDetailCompletedEventHandler GetOrderDetailCompleted;
        
        /// <remarks/>
        public event InsertSFCCompletedEventHandler InsertSFCCompleted;
        
        /// <remarks/>
        public event GetSeptInfoCompletedEventHandler GetSeptInfoCompleted;
        
        /// <remarks/>
        public event GetProcessListCompletedEventHandler GetProcessListCompleted;
        
        /// <remarks/>
        public event GetStationListCompletedEventHandler GetStationListCompleted;
        
        /// <remarks/>
        public event InserOCVCompletedEventHandler InserOCVCompleted;
        
        /// <remarks/>
        public event InserPinDataCompletedEventHandler InserPinDataCompleted;
        
        /// <remarks/>
        public event InserTightenCompletedEventHandler InserTightenCompleted;
        
        /// <remarks/>
        public event Check_UserCompletedEventHandler Check_UserCompleted;
        
        /// <remarks/>
        public event Check_MaterialCompletedEventHandler Check_MaterialCompleted;
        
        /// <remarks/>
        public event Check_SFCCompletedEventHandler Check_SFCCompleted;
        
        /// <remarks/>
        public event Insert_MachineNoCompletedEventHandler Insert_MachineNoCompleted;
        
        /// <remarks/>
        public event Get_ProcessInfoCompletedEventHandler Get_ProcessInfoCompleted;
        
        /// <remarks/>
        public event Get_StationInfoCompletedEventHandler Get_StationInfoCompleted;
        
        /// <remarks/>
        public event GetTrayInfoCompletedEventHandler GetTrayInfoCompleted;
        
        /// <remarks/>
        public event InjectCompletedEventHandler InjectCompleted;
        
        /// <remarks/>
        public event GetStepDataCompletedEventHandler GetStepDataCompleted;
        
        /// <remarks/>
        public event GetMachineStateCompletedEventHandler GetMachineStateCompleted;
        
        /// <remarks/>
        public event SetTrayInfoCompletedEventHandler SetTrayInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/DoWork", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DoWork() {
            this.Invoke("DoWork", new object[0]);
        }
        
        /// <remarks/>
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        /// <remarks/>
        public void DoWorkAsync(object userState) {
            if ((this.DoWorkOperationCompleted == null)) {
                this.DoWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoWorkOperationCompleted);
            }
            this.InvokeAsync("DoWork", new object[0], this.DoWorkOperationCompleted, userState);
        }
        
        private void OnDoWorkOperationCompleted(object arg) {
            if ((this.DoWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/RunServerAPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RunServerAPI([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string spc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string APIName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string jsonData) {
            object[] results = this.Invoke("RunServerAPI", new object[] {
                        spc,
                        APIName,
                        jsonData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RunServerAPIAsync(string spc, string APIName, string jsonData) {
            this.RunServerAPIAsync(spc, APIName, jsonData, null);
        }
        
        /// <remarks/>
        public void RunServerAPIAsync(string spc, string APIName, string jsonData, object userState) {
            if ((this.RunServerAPIOperationCompleted == null)) {
                this.RunServerAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunServerAPIOperationCompleted);
            }
            this.InvokeAsync("RunServerAPI", new object[] {
                        spc,
                        APIName,
                        jsonData}, this.RunServerAPIOperationCompleted, userState);
        }
        
        private void OnRunServerAPIOperationCompleted(object arg) {
            if ((this.RunServerAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunServerAPICompleted(this, new RunServerAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/RunServerAPI2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RunServerAPI2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string spc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string APIName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string jsonData, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string iftb) {
            object[] results = this.Invoke("RunServerAPI2", new object[] {
                        spc,
                        APIName,
                        jsonData,
                        iftb});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RunServerAPI2Async(string spc, string APIName, string jsonData, string iftb) {
            this.RunServerAPI2Async(spc, APIName, jsonData, iftb, null);
        }
        
        /// <remarks/>
        public void RunServerAPI2Async(string spc, string APIName, string jsonData, string iftb, object userState) {
            if ((this.RunServerAPI2OperationCompleted == null)) {
                this.RunServerAPI2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunServerAPI2OperationCompleted);
            }
            this.InvokeAsync("RunServerAPI2", new object[] {
                        spc,
                        APIName,
                        jsonData,
                        iftb}, this.RunServerAPI2OperationCompleted, userState);
        }
        
        private void OnRunServerAPI2OperationCompleted(object arg) {
            if ((this.RunServerAPI2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunServerAPI2Completed(this, new RunServerAPI2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/CheckSFC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckSFC([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml) {
            object[] results = this.Invoke("CheckSFC", new object[] {
                        Xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSFCAsync(string Xml) {
            this.CheckSFCAsync(Xml, null);
        }
        
        /// <remarks/>
        public void CheckSFCAsync(string Xml, object userState) {
            if ((this.CheckSFCOperationCompleted == null)) {
                this.CheckSFCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSFCOperationCompleted);
            }
            this.InvokeAsync("CheckSFC", new object[] {
                        Xml}, this.CheckSFCOperationCompleted, userState);
        }
        
        private void OnCheckSFCOperationCompleted(object arg) {
            if ((this.CheckSFCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSFCCompleted(this, new CheckSFCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Login([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmpCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PassWprd) {
            object[] results = this.Invoke("Login", new object[] {
                        EmpCode,
                        PassWprd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string EmpCode, string PassWprd) {
            this.LoginAsync(EmpCode, PassWprd, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string EmpCode, string PassWprd, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        EmpCode,
                        PassWprd}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/Test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetWorkOrderInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetWorkOrderInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml) {
            object[] results = this.Invoke("GetWorkOrderInfo", new object[] {
                        Xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkOrderInfoAsync(string Xml) {
            this.GetWorkOrderInfoAsync(Xml, null);
        }
        
        /// <remarks/>
        public void GetWorkOrderInfoAsync(string Xml, object userState) {
            if ((this.GetWorkOrderInfoOperationCompleted == null)) {
                this.GetWorkOrderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkOrderInfoOperationCompleted);
            }
            this.InvokeAsync("GetWorkOrderInfo", new object[] {
                        Xml}, this.GetWorkOrderInfoOperationCompleted, userState);
        }
        
        private void OnGetWorkOrderInfoOperationCompleted(object arg) {
            if ((this.GetWorkOrderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkOrderInfoCompleted(this, new GetWorkOrderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetEmployeeInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetEmployeeInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml) {
            object[] results = this.Invoke("GetEmployeeInfo", new object[] {
                        Xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeInfoAsync(string Xml) {
            this.GetEmployeeInfoAsync(Xml, null);
        }
        
        /// <remarks/>
        public void GetEmployeeInfoAsync(string Xml, object userState) {
            if ((this.GetEmployeeInfoOperationCompleted == null)) {
                this.GetEmployeeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeInfoOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeInfo", new object[] {
                        Xml}, this.GetEmployeeInfoOperationCompleted, userState);
        }
        
        private void OnGetEmployeeInfoOperationCompleted(object arg) {
            if ((this.GetEmployeeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeInfoCompleted(this, new GetEmployeeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetProductInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetProductInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml) {
            object[] results = this.Invoke("GetProductInfo", new object[] {
                        Xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductInfoAsync(string Xml) {
            this.GetProductInfoAsync(Xml, null);
        }
        
        /// <remarks/>
        public void GetProductInfoAsync(string Xml, object userState) {
            if ((this.GetProductInfoOperationCompleted == null)) {
                this.GetProductInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductInfoOperationCompleted);
            }
            this.InvokeAsync("GetProductInfo", new object[] {
                        Xml}, this.GetProductInfoOperationCompleted, userState);
        }
        
        private void OnGetProductInfoOperationCompleted(object arg) {
            if ((this.GetProductInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductInfoCompleted(this, new GetProductInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetBomInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetBomInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml) {
            object[] results = this.Invoke("GetBomInfo", new object[] {
                        Xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBomInfoAsync(string Xml) {
            this.GetBomInfoAsync(Xml, null);
        }
        
        /// <remarks/>
        public void GetBomInfoAsync(string Xml, object userState) {
            if ((this.GetBomInfoOperationCompleted == null)) {
                this.GetBomInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBomInfoOperationCompleted);
            }
            this.InvokeAsync("GetBomInfo", new object[] {
                        Xml}, this.GetBomInfoOperationCompleted, userState);
        }
        
        private void OnGetBomInfoOperationCompleted(object arg) {
            if ((this.GetBomInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBomInfoCompleted(this, new GetBomInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetOrderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetOrderDetail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml) {
            object[] results = this.Invoke("GetOrderDetail", new object[] {
                        Xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderDetailAsync(string Xml) {
            this.GetOrderDetailAsync(Xml, null);
        }
        
        /// <remarks/>
        public void GetOrderDetailAsync(string Xml, object userState) {
            if ((this.GetOrderDetailOperationCompleted == null)) {
                this.GetOrderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderDetailOperationCompleted);
            }
            this.InvokeAsync("GetOrderDetail", new object[] {
                        Xml}, this.GetOrderDetailOperationCompleted, userState);
        }
        
        private void OnGetOrderDetailOperationCompleted(object arg) {
            if ((this.GetOrderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderDetailCompleted(this, new GetOrderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/InsertSFC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertSFC([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml) {
            object[] results = this.Invoke("InsertSFC", new object[] {
                        Xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSFCAsync(string Xml) {
            this.InsertSFCAsync(Xml, null);
        }
        
        /// <remarks/>
        public void InsertSFCAsync(string Xml, object userState) {
            if ((this.InsertSFCOperationCompleted == null)) {
                this.InsertSFCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSFCOperationCompleted);
            }
            this.InvokeAsync("InsertSFC", new object[] {
                        Xml}, this.InsertSFCOperationCompleted, userState);
        }
        
        private void OnInsertSFCOperationCompleted(object arg) {
            if ((this.InsertSFCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSFCCompleted(this, new InsertSFCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetSeptInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetSeptInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string SFC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ProcessFrom) {
            object[] results = this.Invoke("GetSeptInfo", new object[] {
                        SFC,
                        ProcessFrom});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeptInfoAsync(string SFC, string ProcessFrom) {
            this.GetSeptInfoAsync(SFC, ProcessFrom, null);
        }
        
        /// <remarks/>
        public void GetSeptInfoAsync(string SFC, string ProcessFrom, object userState) {
            if ((this.GetSeptInfoOperationCompleted == null)) {
                this.GetSeptInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeptInfoOperationCompleted);
            }
            this.InvokeAsync("GetSeptInfo", new object[] {
                        SFC,
                        ProcessFrom}, this.GetSeptInfoOperationCompleted, userState);
        }
        
        private void OnGetSeptInfoOperationCompleted(object arg) {
            if ((this.GetSeptInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeptInfoCompleted(this, new GetSeptInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetProcessList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetProcessList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IpAddress) {
            object[] results = this.Invoke("GetProcessList", new object[] {
                        IpAddress});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessListAsync(string IpAddress) {
            this.GetProcessListAsync(IpAddress, null);
        }
        
        /// <remarks/>
        public void GetProcessListAsync(string IpAddress, object userState) {
            if ((this.GetProcessListOperationCompleted == null)) {
                this.GetProcessListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessListOperationCompleted);
            }
            this.InvokeAsync("GetProcessList", new object[] {
                        IpAddress}, this.GetProcessListOperationCompleted, userState);
        }
        
        private void OnGetProcessListOperationCompleted(object arg) {
            if ((this.GetProcessListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessListCompleted(this, new GetProcessListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetStationList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetStationList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IpAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ProcessCode) {
            object[] results = this.Invoke("GetStationList", new object[] {
                        IpAddress,
                        ProcessCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStationListAsync(string IpAddress, string ProcessCode) {
            this.GetStationListAsync(IpAddress, ProcessCode, null);
        }
        
        /// <remarks/>
        public void GetStationListAsync(string IpAddress, string ProcessCode, object userState) {
            if ((this.GetStationListOperationCompleted == null)) {
                this.GetStationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStationListOperationCompleted);
            }
            this.InvokeAsync("GetStationList", new object[] {
                        IpAddress,
                        ProcessCode}, this.GetStationListOperationCompleted, userState);
        }
        
        private void OnGetStationListOperationCompleted(object arg) {
            if ((this.GetStationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStationListCompleted(this, new GetStationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/InserOCV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InserOCV([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("InserOCV", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InserOCVAsync(string xml) {
            this.InserOCVAsync(xml, null);
        }
        
        /// <remarks/>
        public void InserOCVAsync(string xml, object userState) {
            if ((this.InserOCVOperationCompleted == null)) {
                this.InserOCVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInserOCVOperationCompleted);
            }
            this.InvokeAsync("InserOCV", new object[] {
                        xml}, this.InserOCVOperationCompleted, userState);
        }
        
        private void OnInserOCVOperationCompleted(object arg) {
            if ((this.InserOCVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InserOCVCompleted(this, new InserOCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/InserPinData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InserPinData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("InserPinData", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InserPinDataAsync(string xml) {
            this.InserPinDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void InserPinDataAsync(string xml, object userState) {
            if ((this.InserPinDataOperationCompleted == null)) {
                this.InserPinDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInserPinDataOperationCompleted);
            }
            this.InvokeAsync("InserPinData", new object[] {
                        xml}, this.InserPinDataOperationCompleted, userState);
        }
        
        private void OnInserPinDataOperationCompleted(object arg) {
            if ((this.InserPinDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InserPinDataCompleted(this, new InserPinDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/InserTighten", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InserTighten([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("InserTighten", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InserTightenAsync(string xml) {
            this.InserTightenAsync(xml, null);
        }
        
        /// <remarks/>
        public void InserTightenAsync(string xml, object userState) {
            if ((this.InserTightenOperationCompleted == null)) {
                this.InserTightenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInserTightenOperationCompleted);
            }
            this.InvokeAsync("InserTighten", new object[] {
                        xml}, this.InserTightenOperationCompleted, userState);
        }
        
        private void OnInserTightenOperationCompleted(object arg) {
            if ((this.InserTightenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InserTightenCompleted(this, new InserTightenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/Check_User", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Check_User([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("Check_User", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Check_UserAsync(string xml) {
            this.Check_UserAsync(xml, null);
        }
        
        /// <remarks/>
        public void Check_UserAsync(string xml, object userState) {
            if ((this.Check_UserOperationCompleted == null)) {
                this.Check_UserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_UserOperationCompleted);
            }
            this.InvokeAsync("Check_User", new object[] {
                        xml}, this.Check_UserOperationCompleted, userState);
        }
        
        private void OnCheck_UserOperationCompleted(object arg) {
            if ((this.Check_UserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_UserCompleted(this, new Check_UserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/Check_Material", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Check_Material([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("Check_Material", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Check_MaterialAsync(string xml) {
            this.Check_MaterialAsync(xml, null);
        }
        
        /// <remarks/>
        public void Check_MaterialAsync(string xml, object userState) {
            if ((this.Check_MaterialOperationCompleted == null)) {
                this.Check_MaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_MaterialOperationCompleted);
            }
            this.InvokeAsync("Check_Material", new object[] {
                        xml}, this.Check_MaterialOperationCompleted, userState);
        }
        
        private void OnCheck_MaterialOperationCompleted(object arg) {
            if ((this.Check_MaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_MaterialCompleted(this, new Check_MaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/Check_SFC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Check_SFC([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("Check_SFC", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Check_SFCAsync(string xml) {
            this.Check_SFCAsync(xml, null);
        }
        
        /// <remarks/>
        public void Check_SFCAsync(string xml, object userState) {
            if ((this.Check_SFCOperationCompleted == null)) {
                this.Check_SFCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_SFCOperationCompleted);
            }
            this.InvokeAsync("Check_SFC", new object[] {
                        xml}, this.Check_SFCOperationCompleted, userState);
        }
        
        private void OnCheck_SFCOperationCompleted(object arg) {
            if ((this.Check_SFCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_SFCCompleted(this, new Check_SFCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/Insert_MachineNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Insert_MachineNo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("Insert_MachineNo", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_MachineNoAsync(string xml) {
            this.Insert_MachineNoAsync(xml, null);
        }
        
        /// <remarks/>
        public void Insert_MachineNoAsync(string xml, object userState) {
            if ((this.Insert_MachineNoOperationCompleted == null)) {
                this.Insert_MachineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_MachineNoOperationCompleted);
            }
            this.InvokeAsync("Insert_MachineNo", new object[] {
                        xml}, this.Insert_MachineNoOperationCompleted, userState);
        }
        
        private void OnInsert_MachineNoOperationCompleted(object arg) {
            if ((this.Insert_MachineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_MachineNoCompleted(this, new Insert_MachineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/Get_ProcessInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Get_ProcessInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("Get_ProcessInfo", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ProcessInfoAsync(string xml) {
            this.Get_ProcessInfoAsync(xml, null);
        }
        
        /// <remarks/>
        public void Get_ProcessInfoAsync(string xml, object userState) {
            if ((this.Get_ProcessInfoOperationCompleted == null)) {
                this.Get_ProcessInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ProcessInfoOperationCompleted);
            }
            this.InvokeAsync("Get_ProcessInfo", new object[] {
                        xml}, this.Get_ProcessInfoOperationCompleted, userState);
        }
        
        private void OnGet_ProcessInfoOperationCompleted(object arg) {
            if ((this.Get_ProcessInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ProcessInfoCompleted(this, new Get_ProcessInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/Get_StationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Get_StationInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("Get_StationInfo", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_StationInfoAsync(string xml) {
            this.Get_StationInfoAsync(xml, null);
        }
        
        /// <remarks/>
        public void Get_StationInfoAsync(string xml, object userState) {
            if ((this.Get_StationInfoOperationCompleted == null)) {
                this.Get_StationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_StationInfoOperationCompleted);
            }
            this.InvokeAsync("Get_StationInfo", new object[] {
                        xml}, this.Get_StationInfoOperationCompleted, userState);
        }
        
        private void OnGet_StationInfoOperationCompleted(object arg) {
            if ((this.Get_StationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_StationInfoCompleted(this, new Get_StationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetTrayInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetTrayInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("GetTrayInfo", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrayInfoAsync(string xml) {
            this.GetTrayInfoAsync(xml, null);
        }
        
        /// <remarks/>
        public void GetTrayInfoAsync(string xml, object userState) {
            if ((this.GetTrayInfoOperationCompleted == null)) {
                this.GetTrayInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrayInfoOperationCompleted);
            }
            this.InvokeAsync("GetTrayInfo", new object[] {
                        xml}, this.GetTrayInfoOperationCompleted, userState);
        }
        
        private void OnGetTrayInfoOperationCompleted(object arg) {
            if ((this.GetTrayInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrayInfoCompleted(this, new GetTrayInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/Inject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Inject([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string SFC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ProcessCode) {
            object[] results = this.Invoke("Inject", new object[] {
                        SFC,
                        ProcessCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void InjectAsync(string SFC, string ProcessCode) {
            this.InjectAsync(SFC, ProcessCode, null);
        }
        
        /// <remarks/>
        public void InjectAsync(string SFC, string ProcessCode, object userState) {
            if ((this.InjectOperationCompleted == null)) {
                this.InjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjectOperationCompleted);
            }
            this.InvokeAsync("Inject", new object[] {
                        SFC,
                        ProcessCode}, this.InjectOperationCompleted, userState);
        }
        
        private void OnInjectOperationCompleted(object arg) {
            if ((this.InjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InjectCompleted(this, new InjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetStepData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetStepData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string SFC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ProcessCode) {
            object[] results = this.Invoke("GetStepData", new object[] {
                        SFC,
                        ProcessCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStepDataAsync(string SFC, string ProcessCode) {
            this.GetStepDataAsync(SFC, ProcessCode, null);
        }
        
        /// <remarks/>
        public void GetStepDataAsync(string SFC, string ProcessCode, object userState) {
            if ((this.GetStepDataOperationCompleted == null)) {
                this.GetStepDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStepDataOperationCompleted);
            }
            this.InvokeAsync("GetStepData", new object[] {
                        SFC,
                        ProcessCode}, this.GetStepDataOperationCompleted, userState);
        }
        
        private void OnGetStepDataOperationCompleted(object arg) {
            if ((this.GetStepDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStepDataCompleted(this, new GetStepDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/GetMachineState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetMachineState([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MachineNoCode) {
            object[] results = this.Invoke("GetMachineState", new object[] {
                        MachineNoCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineStateAsync(string MachineNoCode) {
            this.GetMachineStateAsync(MachineNoCode, null);
        }
        
        /// <remarks/>
        public void GetMachineStateAsync(string MachineNoCode, object userState) {
            if ((this.GetMachineStateOperationCompleted == null)) {
                this.GetMachineStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineStateOperationCompleted);
            }
            this.InvokeAsync("GetMachineState", new object[] {
                        MachineNoCode}, this.GetMachineStateOperationCompleted, userState);
        }
        
        private void OnGetMachineStateOperationCompleted(object arg) {
            if ((this.GetMachineStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineStateCompleted(this, new GetMachineStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceAPI/SetTrayInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SetTrayInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("SetTrayInfo", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetTrayInfoAsync(string xml) {
            this.SetTrayInfoAsync(xml, null);
        }
        
        /// <remarks/>
        public void SetTrayInfoAsync(string xml, object userState) {
            if ((this.SetTrayInfoOperationCompleted == null)) {
                this.SetTrayInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTrayInfoOperationCompleted);
            }
            this.InvokeAsync("SetTrayInfo", new object[] {
                        xml}, this.SetTrayInfoOperationCompleted, userState);
        }
        
        private void OnSetTrayInfoOperationCompleted(object arg) {
            if ((this.SetTrayInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTrayInfoCompleted(this, new SetTrayInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DoWorkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RunServerAPICompletedEventHandler(object sender, RunServerAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunServerAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunServerAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RunServerAPI2CompletedEventHandler(object sender, RunServerAPI2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunServerAPI2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunServerAPI2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckSFCCompletedEventHandler(object sender, CheckSFCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSFCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSFCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWorkOrderInfoCompletedEventHandler(object sender, GetWorkOrderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkOrderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkOrderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEmployeeInfoCompletedEventHandler(object sender, GetEmployeeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProductInfoCompletedEventHandler(object sender, GetProductInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBomInfoCompletedEventHandler(object sender, GetBomInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBomInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBomInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOrderDetailCompletedEventHandler(object sender, GetOrderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertSFCCompletedEventHandler(object sender, InsertSFCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSFCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSFCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSeptInfoCompletedEventHandler(object sender, GetSeptInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeptInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeptInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProcessListCompletedEventHandler(object sender, GetProcessListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStationListCompletedEventHandler(object sender, GetStationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InserOCVCompletedEventHandler(object sender, InserOCVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InserOCVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InserOCVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InserPinDataCompletedEventHandler(object sender, InserPinDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InserPinDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InserPinDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InserTightenCompletedEventHandler(object sender, InserTightenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InserTightenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InserTightenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Check_UserCompletedEventHandler(object sender, Check_UserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_UserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_UserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Check_MaterialCompletedEventHandler(object sender, Check_MaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_MaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_MaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Check_SFCCompletedEventHandler(object sender, Check_SFCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_SFCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_SFCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Insert_MachineNoCompletedEventHandler(object sender, Insert_MachineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_MachineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_MachineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_ProcessInfoCompletedEventHandler(object sender, Get_ProcessInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ProcessInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ProcessInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_StationInfoCompletedEventHandler(object sender, Get_StationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_StationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_StationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTrayInfoCompletedEventHandler(object sender, GetTrayInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrayInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrayInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InjectCompletedEventHandler(object sender, InjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStepDataCompletedEventHandler(object sender, GetStepDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStepDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStepDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMachineStateCompletedEventHandler(object sender, GetMachineStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetTrayInfoCompletedEventHandler(object sender, SetTrayInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTrayInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTrayInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591