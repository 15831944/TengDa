<Window x:Class="Tafel.Hipot.App.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tafel.Hipot.App"
        xmlns:view="clr-namespace:Tafel.Hipot.App.View"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:CommonCommand="clr-namespace:TengDa.Wpf;assembly=TengDa.Wpf"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="True"
        Title="LoginWindow" Height="350" Width="400" Margin="0">
    <Window.Resources>

        <!--设置关闭标识样式-->
        <Style TargetType="{x:Type Button}" x:Key="CloseButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Button Content="X" Height="12" Width="12" Margin="4" Click="BtnCloseWindow_Click" Foreground="White"
                            Background="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Top" HorizontalAlignment="Right">
                            <Button.Template>
                                <ControlTemplate >
                                    <Grid>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Path x:Name="btnPath" 
                                                        Data="M0 0L10 10M0 10L10 0" Stroke="White"
                                                        StrokeThickness="1"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--集成资源-->
        <Style x:Key="hyberlinkEffect" TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="#09a3de"></Setter>
            <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Green"></Setter>
                    <!--在鼠标悬停显示下划线-->
                    <Setter Property="TextBlock.TextDecorations">
                        <Setter.Value>
                            <TextDecorationCollection>
                                <TextDecoration Location="Underline"/>
                            </TextDecorationCollection>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!--圆角button-->
        <Style  x:Key="chamferButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#09a3de" Offset="0.0" />
                                    <GradientStop Color="#09a3de" Offset="0.0" />
                                    <GradientStop Color="#09a3de" Offset="0.0" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="CommonCommand:UserCommands.Login" Executed="OnLogin"/>
    </Window.CommandBindings>

    <Border CornerRadius="15" Height="350" Width="400" Background="AliceBlue">
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="11*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <!--登录控件头部-->
            <MediaElement Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" x:Name="myMediaElement" VerticalAlignment="Top">
                <MediaElement.Triggers>
                    <EventTrigger RoutedEvent="MediaElement.Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <MediaTimeline x:Name="myMediaTimeline" Storyboard.TargetName="myMediaElement" RepeatBehavior="Forever" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </MediaElement.Triggers>
            </MediaElement>

            <Button Grid.Row="0" Grid.Column="3" Style="{StaticResource CloseButton}"/>

            <!--用户头像-->
            <Image Grid.Row="1" Grid.Column="0" Grid.RowSpan="3" Source="/Images/DefaultProfile.jpg" Width="96" Height="96" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,10,0">
                <Image.Clip>
                    <EllipseGeometry RadiusX="48" RadiusY="48" Center="48,48"/>
                </Image.Clip>
            </Image>
            <Border CornerRadius="10"  Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"  Height="30">
                <xctk:WatermarkTextBox x:Name="loginUserNameTextBox" Watermark="用户账号" VerticalContentAlignment="Center"/>
            </Border>
            <xctk:WatermarkPasswordBox x:Name="loginPasswordBox" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Watermark="用户密码" VerticalContentAlignment="Center" VerticalAlignment="Top" Height="30" />

            <TextBlock Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" Margin="10,20,0,0">
                    <Hyperlink Style="{StaticResource hyberlinkEffect}">注册账号</Hyperlink>
            </TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="3" VerticalAlignment="Center" Margin="10,0,0,0">
                    <Hyperlink Style="{StaticResource hyberlinkEffect}">找回密码</Hyperlink>
            </TextBlock>

            <CheckBox Grid.Row="3" Grid.Column="1" Foreground="gray" IsChecked="{Binding IsRememberMe,Mode=TwoWay}">记住我</CheckBox>
            <CheckBox Grid.Row="3" Grid.Column="2" Foreground="gray" HorizontalAlignment="Right" IsChecked="{Binding IsMesLogin,Mode=TwoWay}">MES登录</CheckBox>

            <Button x:Name="btnLogin" Style="{StaticResource chamferButton}"  Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Content="登  录" Background="#09a3de"  Foreground="White" BorderThickness="0" Margin="0,-5,0,25"
                        Command="CommonCommand:UserCommands.Login"/>
        </Grid>
    </Border>

</Window>
