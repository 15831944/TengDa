<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="cmsFloor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsmStopBaking.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9P+ZQx6C7S1xhAAAAABJRU5ErkJggg==
</value>
  </data>
</root>